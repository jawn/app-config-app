- content_for :title do
  #{cfg_form_name}

- content_for :ng_app do
  appcfg

- content_for :ng_controller do
  AppCfg

- content_for :nav do
  %li
    %a(data-ng-click="sync()" href="javascript: return false;") Sync
  %li
    %a(data-ng-click="diffs()" href="javascript: return false;") View Diff
  %li
    %a(data-ng-click="save()" href="javascript: return false;") Save
  %li
    %a(data-ng-click="revert()" href="javascript: return false;") Revert

:javascript
  angular.module("appcfg", ["ngResource"]).factory("AppCfgModel", function ($resource) {
    return $resource("/#{cfg_json}");
  });

  function AppCfg($scope, $http, AppCfgModel) {
    $scope.statusMessage = "";
    $scope.message = "";
    $scope.newNickname = "";
    $scope.cfg = AppCfgModel.get();

    $scope.diffs = function () {
      $http.get("/diffs/#{cfg_json}").success(function (response) {
        $scope.statusMessage = response;
      }).failure(function () {
        $scope.statusMessage = "";
        alert("Diff failed");
      });
    };

    $scope.revert = function () {
      if (confirm("Are you sure?\nYou will lose any changes.")) {
        $http.post("/revert/#{cfg_json}").success(function (response) {
          $scope.cfg.$get({}, function () {
            $scope.statusMessage = response;
          }, function (code, response) {
          $scope.statusMessage = "";
            alert("Revert succeeded, reload failed");
          });
        }).failure(function (response) {
          $scope.statusMessage = "";
          alert("Revert failed");
        });
      }
    };

    $scope.save = function () {
      $scope.cfg.$save(function (response) {
        $scope.statusMessage = "";
        alert("Config saved to server");
      }, function () {
        $scope.statusMessage = "";
        alert("ERROR on save");
      });
    };

    $scope.sync = function () {
      $http.post("/sync").success(function (response) {
        $scope.statusMessage = response;
      }).failure(function (response) {
        $scope.statusMessage = "";
        alert("Sync failed");
      });
    };

    $scope.newNick = function () {
        $scope.cfg.bannedNicks.push($scope.newNickname);
        $scope.newNickname = "";
    };

    $scope.deleteNick = function (nick) {
        var oldBannedNicks = $scope.cfg.bannedNicks;
        $scope.cfg.bannedNicks = [];
        angular.forEach(oldBannedNicks, function (n) {
            if (nick != n) $scope.cfg.bannedNicks.push(n);
        });
    };
  }

%div#cfg_form

  %label(for="lighton") Light is on:
  %input#lighton(data-ng-model="cfg.lighton" type="checkbox")
  %br

  %label(for="defaultErrorReciever") Default Error Reciever (email):
  %input#defaultErrorReciever(data-ng-model="cfg.defaultErrorReciever" type="email")
  %br

  %label(for="loadMaxPercent") Max Load Percentage:
  %input#loadMaxPercent(data-ng-model="cfg.loadMaxPercent" type="number" min="0" max="100")
  %br

  %label(for="nextShutdownDate") Next Shutdown Date:
  %input#nextShutdownDate(data-ng-model="cfg.nextShutdownDate" type="text")
  %br

  Banned nicks:
  %ol
    %li(data-ng-repeat="nick in cfg.bannedNicks")
      %span
        {{nick}}&nbsp;&nbsp;
        %a(data-ng-click="deleteNick(nick)") [X]

  %form(data-ng-submit="newNick()")
    %label(for="newNickname") Ban Nickname:
    %input#newNickname(type="text" data-ng-model="newNickname" size="20")
    %input(type="submit" value="<-- Add Nick")
    %br

%br

%div#status_message(data-ng-bind-html-unsafe="statusMessage")
